<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.sdut.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="edu.sdut.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="actor_id" property="actorId" jdbcType="INTEGER" />
    <result column="ext_act_id" property="extActId" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, group_id, actor_id, ext_act_id, tel, email, create_datetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.sdut.model.UserInfo" >
    insert into user_info (id, name, password, 
      group_id, actor_id, ext_act_id, 
      tel, email, create_datetime
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=INTEGER}, #{actorId,jdbcType=INTEGER}, #{extActId,jdbcType=INTEGER}, 
      #{tel,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.sdut.model.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="actorId != null" >
        actor_id,
      </if>
      <if test="extActId != null" >
        ext_act_id,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="actorId != null" >
        #{actorId,jdbcType=INTEGER},
      </if>
      <if test="extActId != null" >
        #{extActId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.sdut.model.UserInfo" >
    update user_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="actorId != null" >
        actor_id = #{actorId,jdbcType=INTEGER},
      </if>
      <if test="extActId != null" >
        ext_act_id = #{extActId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.sdut.model.UserInfo" >
    update user_info
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      actor_id = #{actorId,jdbcType=INTEGER},
      ext_act_id = #{extActId,jdbcType=INTEGER},
      tel = #{tel,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByNamePassword" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
  	select
  	<include refid="Base_Column_List" />
  	from user_info
  	where name = #{name,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="getUserList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		ui.name userName,
		ui.tel,
		ui.email,
		ui.create_datetime createDateTime,
		ug.name groupName,
		ua.name actorName
	FROM
		user_info ui
	LEFT JOIN user_group ug ON ui.group_id = ug.id
	LEFT JOIN user_actor ua ON ui.actor_id = ua.id
	<where>
		<if test="userID!=null and userID!=''">
			ui.id=#{userID}
		</if>
		<if test="userName!=null and userName!=-1">
			ui.name=#{userName}
		</if>
		<if test="userGroup!=null and userGroup!=-1">
			ug.id=#{userGroup}
		</if>
		<if test="userActor!=null and userActor!=-1">
			ua.id=#{userActor}
		</if>
	</where>
	<if test="begin!=null and step!=null">
		LIMIT #{begin},#{step}
	</if>
  </select>
  <select id="getUserListCount" parameterType="java.util.HashMap" resultType="java.lang.Long">
  	SELECT
		count(*)
	FROM
		user_info ui
	LEFT JOIN user_group ug ON ui.group_id = ug.id
	LEFT JOIN user_actor ua ON ui.actor_id = ua.id
	<where>
		<if test="userId!=null and userId!=''">
			ui.id=#{userId}
		</if>
		<if test="userName!=null and userName!=-1">
			ui.name=#{userName}
		</if>
		<if test="userGroup!=null and userGroup!=-1">
			ug.id=#{userGroup}
		</if>
		<if test="userActor!=null and userActor!=-1">
			ua.id=#{userActor}
		</if>
	</where>
  </select>
  <select id="isExistUser" parameterType="java.lang.String" resultType="java.lang.Integer">
  	SELECT
  		id
  	FROM
  		user_info
  	WHERE name=#{name}
  </select>
  <select id="getUserByGroup" parameterType="java.lang.Integer" resultType="java.util.HashMap">
  	SELECT
  		id,name
  	FROM
  		user_info
  	WHERE group_id=#{groupID}
  </select>
  <select id="getUserByProject" parameterType="java.lang.Integer" resultType="java.util.HashMap">
  	SELECT
		ui.id,
		ui.name,
		ua.id actor
	FROM
		user_info ui
	LEFT JOIN user_group ug ON ui.group_id = ug.id
	LEFT JOIN project_info pi ON pi.group_id = ug.id
	LEFT JOIN user_actor ua ON ui.actor_id= ua.id
	WHERE pi.id=#{projectID}
  </select>
</mapper>